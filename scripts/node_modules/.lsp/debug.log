Hello - from /home/jasoons/.vscode/extensions/jaredly.reason-vscode-1.7.13/bin.native.linux
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":false}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/jasoons/Documents/code/monorepo/scripts/node_modules/rescript/lib/ocaml/js.ml","languageId":"ocaml","version":1,"text":"(* Copyright (C) 2015-2016 Bloomberg Finance L.P.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * In addition to the permissions granted to you by the LGPL, you may combine\n * or link a \"work that uses the Library\" with a publicly distributed version\n * of this file to produce a combined library or application, then distribute\n * that combined work under the terms of your choosing, with no requirement\n * to comply with the obligations normally placed on you by section 4 of the\n * LGPL version 3 (or the corresponding section of a later version of the LGPL\n * should you choose to use a later version).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. *)\n\n[@@@bs.config {flags = [|\"-unboxed-types\";\"-w\" ;\"-49\"|]}]\n(* DESIGN:\n   - It does not have any code, all its code will be inlined so that\n       there will never be\n   {[ require('js')]}\n   - Its interface should be minimal\n*)\n\n(** This library provides bindings and necessary support for JS FFI.\n    It contains all bindings into [Js] namespace.\n\n    @example {[\n      [| 1;2;3;4|]\n      |. Js.Array2.map (fun x -> x + 1 )\n      |. Js.Array2.reduce (+) 0\n      |. Js.log\n    ]}\n*)\n\n(**/**)\n(** Types for JS objects *)\ntype 'a t = 'a\n[@@ocaml.deprecated \"Js.t is not needed any more, you can remove it\"]\n(**/**)\n\n(* internal types for FFI, these types are not used by normal users \n    Absent cmi file when looking up module alias.\n*)\nmodule Fn = struct\n  type 'a arity0 = {\n    i0 : unit -> 'a [@internal]  \n  }\n  type 'a arity1 = {\n    i1 : 'a [@internal]\n  }\n  type 'a arity2 = {\n    i2 : 'a [@internal]\n  }\n  type 'a arity3 = {\n    i3 : 'a [@internal]\n  }\n  type 'a arity4 = {\n    i4 : 'a [@internal]\n  }\n  type 'a arity5 = {\n    i5 : 'a [@internal]\n  }\n  type 'a arity6 = {\n    i6 : 'a [@internal]\n  }\n  type 'a arity7 = {\n    i7 : 'a [@internal]\n  }\n  type 'a arity8 = {\n    i8 : 'a [@internal]\n  }\n  type 'a arity9 = {\n    i9 : 'a [@internal]\n  }\n  type 'a arity10 = {\n    i10 : 'a [@internal]\n  }\n  type 'a arity11 = {\n    i11 : 'a [@internal]\n  }\n  type 'a arity12 = {\n    i12 : 'a [@internal]\n  }\n  type 'a arity13 = {\n    i13 : 'a [@internal]\n  }\n  type 'a arity14 = {\n    i14 : 'a [@internal]\n  }\n  type 'a arity15 = {\n    i15 : 'a [@internal]\n  }\n  type 'a arity16 = {\n    i16 : 'a [@internal]\n  }\n  type 'a arity17 = {\n    i17 : 'a [@internal]\n  }\n  type 'a arity18 = {\n    i18 : 'a [@internal]\n  }\n  type 'a arity19 = {\n    i19 : 'a [@internal]\n  }\n  type 'a arity20 = {\n    i20 : 'a [@internal]\n  }\n  type 'a arity21 = {\n    i21 : 'a [@internal]\n  }\n  type 'a arity22 = {\n    i22 : 'a [@internal]\n  }\nend\n\n(**/**)\nmodule MapperRt = Js_mapperRt\nmodule Internal = struct \n  open Fn    \n  external opaqueFullApply : 'a -> 'a = \"#full_apply\"\n\n  (* Use opaque instead of [._n] to prevent some optimizations happening *)\n  external run : 'a arity0 -> 'a = \"#run\" \n  external opaque : 'a -> 'a = \"%opaque\"\n\nend    \n(**/**)\n\n\ntype + 'a null\n(** nullable, value of this type can be either [null] or ['a]\n    this type is the same as type [t] in {!Null}\n*)\n\ntype + 'a undefined\n(** value of this type can be either [undefined] or ['a]\n    this type is the same as type [t] in {!Undefined}  *)\n\ntype + 'a nullable\n(** value of this type can be [undefined], [null] or ['a]\n    this type is the same as type [t] n {!Null_undefined} *)\n\ntype + 'a null_undefined = 'a nullable\n\nexternal toOption : 'a nullable  -> 'a option = \"#nullable_to_opt\"\nexternal undefinedToOption : 'a undefined -> 'a option = \"#undefined_to_opt\"\nexternal nullToOption : 'a null -> 'a option = \"#null_to_opt\"\n\nexternal isNullable : 'a nullable -> bool = \"#is_nullable\"\n\n(** The same as {!test} except that it is more permissive on the types of input *)\nexternal testAny : 'a -> bool = \"#is_nullable\"\n\n\ntype (+'a, +'e) promise\n(** The promise type, defined here for interoperation across packages\n    @deprecated please use {!Js.Promise}\n*)\n\nexternal null : 'a null = \"#null\"\n(** The same as [empty] in {!Js.Null} will be compiled as [null]*)\n\nexternal undefined : 'a undefined = \"#undefined\"\n(** The same as  [empty] {!Js.Undefined} will be compiled as [undefined]*)\n\n\n\nexternal typeof : 'a -> string = \"#typeof\"\n(** [typeof x] will be compiled as [typeof x] in JS\n    Please consider functions in {!Types} for a type safe way of reflection\n*)\n\nexternal log : 'a -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\n(** A convenience function to log everything *)\n\nexternal log2 : 'a -> 'b -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\nexternal log3 : 'a -> 'b -> 'c -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\nexternal log4 : 'a -> 'b -> 'c -> 'd -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\n\nexternal logMany : 'a array -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"] [@@bs.splice]\n(** A convenience function to log more than 4 arguments *)\n\nexternal eqNull : 'a -> 'a null -> bool = \"%bs_equal_null\"\nexternal eqUndefined : 'a -> 'a undefined -> bool = \"%bs_equal_undefined\"\nexternal eqNullable : 'a -> 'a nullable -> bool = \"%bs_equal_nullable\"\n\n(** {4 operators }*)\n\nexternal unsafe_lt : 'a -> 'a -> bool = \"#unsafe_lt\"\n(** [unsafe_lt a b] will be compiled as [a < b].\n    It is marked as unsafe, since it is impossible\n    to give a proper semantics for comparision which applies to any type\n*)\n\n\nexternal unsafe_le : 'a -> 'a -> bool = \"#unsafe_le\"\n(**  [unsafe_le a b] will be compiled as [a <= b].\n     See also {!unsafe_lt}\n*)\n\n\nexternal unsafe_gt : 'a -> 'a -> bool = \"#unsafe_gt\"\n(**  [unsafe_gt a b] will be compiled as [a > b].\n     See also {!unsafe_lt}\n*)\n\nexternal unsafe_ge : 'a -> 'a -> bool = \"#unsafe_ge\"\n(**  [unsafe_ge a b] will be compiled as [a >= b].\n     See also {!unsafe_lt}\n*)\n\n\n(** {12 nested modules}*)\n\nmodule Null = Js_null\n(** Provide utilities around ['a null] *)\n\nmodule Undefined = Js_undefined\n(** Provide utilities around {!undefined} *)\n\nmodule Nullable = Js_null_undefined\n(** Provide utilities around {!null_undefined} *)\n\nmodule Null_undefined = Js_null_undefined\n(** @deprecated please use {!Js.Nullable} *)\n\nmodule Exn = Js_exn\n(** Provide utilities for dealing with Js exceptions *)\n\nmodule Array = Js_array\n(** Provide bindings to Js array*)\n\nmodule Array2 = Js_array2\n(** Provide bindings to Js array*)\n\nmodule String = Js_string\n(** Provide bindings to JS string *)\n\nmodule String2 = Js_string2\n(** Provide bindings to JS string *)\n\nmodule Re = Js_re\n(** Provide bindings to Js regex expression *)\n\nmodule Promise = Js_promise\n(** Provide bindings to JS promise *)\n\nmodule Date = Js_date\n(** Provide bindings for JS Date *)\n\nmodule Dict = Js_dict\n(** Provide utilities for JS dictionary object *)\n\nmodule Global = Js_global\n(** Provide bindings to JS global functions in global namespace*)\n\nmodule Json = Js_json\n(** Provide utilities for json *)\n\nmodule Math = Js_math\n(** Provide bindings for JS [Math] object *)\n\nmodule Obj  = Js_obj\n(** Provide utilities for {!Js.t} *)\n\nmodule Typed_array = Js_typed_array\n(** Provide bindings for JS typed array *)\n\nmodule TypedArray2 = Js_typed_array2\n(** Provide bindings for JS typed array *)\n\nmodule Types = Js_types\n(** Provide utilities for manipulating JS types  *)\n\nmodule Float = Js_float\n(** Provide utilities for JS float *)\n\nmodule Int = Js_int\n(** Provide utilities for int *)\n\nmodule Option = Js_option\n(** Provide utilities for option *)\n\nmodule Result = Js_result\n(** Define the interface for result *)\n\nmodule List = Js_list\n(** Provide utilities for list *)\n\nmodule Vector = Js_vector\n\nmodule Console = Js_console\n"}}}
bs-platform could not be found
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "bs-platform could not be found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/jasoons/Documents/code/monorepo/scripts/node_modules/rescript/lib/ocaml/js.ml"}}}
bs-platform could not be found
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/jasoons/Documents/code/monorepo/scripts/node_modules/rescript/lib/ocaml/js.ml","languageId":"ocaml","version":1,"text":"(* Copyright (C) 2015-2016 Bloomberg Finance L.P.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * In addition to the permissions granted to you by the LGPL, you may combine\n * or link a \"work that uses the Library\" with a publicly distributed version\n * of this file to produce a combined library or application, then distribute\n * that combined work under the terms of your choosing, with no requirement\n * to comply with the obligations normally placed on you by section 4 of the\n * LGPL version 3 (or the corresponding section of a later version of the LGPL\n * should you choose to use a later version).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. *)\n\n[@@@bs.config {flags = [|\"-unboxed-types\";\"-w\" ;\"-49\"|]}]\n(* DESIGN:\n   - It does not have any code, all its code will be inlined so that\n       there will never be\n   {[ require('js')]}\n   - Its interface should be minimal\n*)\n\n(** This library provides bindings and necessary support for JS FFI.\n    It contains all bindings into [Js] namespace.\n\n    @example {[\n      [| 1;2;3;4|]\n      |. Js.Array2.map (fun x -> x + 1 )\n      |. Js.Array2.reduce (+) 0\n      |. Js.log\n    ]}\n*)\n\n(**/**)\n(** Types for JS objects *)\ntype 'a t = 'a\n[@@ocaml.deprecated \"Js.t is not needed any more, you can remove it\"]\n(**/**)\n\n(* internal types for FFI, these types are not used by normal users \n    Absent cmi file when looking up module alias.\n*)\nmodule Fn = struct\n  type 'a arity0 = {\n    i0 : unit -> 'a [@internal]  \n  }\n  type 'a arity1 = {\n    i1 : 'a [@internal]\n  }\n  type 'a arity2 = {\n    i2 : 'a [@internal]\n  }\n  type 'a arity3 = {\n    i3 : 'a [@internal]\n  }\n  type 'a arity4 = {\n    i4 : 'a [@internal]\n  }\n  type 'a arity5 = {\n    i5 : 'a [@internal]\n  }\n  type 'a arity6 = {\n    i6 : 'a [@internal]\n  }\n  type 'a arity7 = {\n    i7 : 'a [@internal]\n  }\n  type 'a arity8 = {\n    i8 : 'a [@internal]\n  }\n  type 'a arity9 = {\n    i9 : 'a [@internal]\n  }\n  type 'a arity10 = {\n    i10 : 'a [@internal]\n  }\n  type 'a arity11 = {\n    i11 : 'a [@internal]\n  }\n  type 'a arity12 = {\n    i12 : 'a [@internal]\n  }\n  type 'a arity13 = {\n    i13 : 'a [@internal]\n  }\n  type 'a arity14 = {\n    i14 : 'a [@internal]\n  }\n  type 'a arity15 = {\n    i15 : 'a [@internal]\n  }\n  type 'a arity16 = {\n    i16 : 'a [@internal]\n  }\n  type 'a arity17 = {\n    i17 : 'a [@internal]\n  }\n  type 'a arity18 = {\n    i18 : 'a [@internal]\n  }\n  type 'a arity19 = {\n    i19 : 'a [@internal]\n  }\n  type 'a arity20 = {\n    i20 : 'a [@internal]\n  }\n  type 'a arity21 = {\n    i21 : 'a [@internal]\n  }\n  type 'a arity22 = {\n    i22 : 'a [@internal]\n  }\nend\n\n(**/**)\nmodule MapperRt = Js_mapperRt\nmodule Internal = struct \n  open Fn    \n  external opaqueFullApply : 'a -> 'a = \"#full_apply\"\n\n  (* Use opaque instead of [._n] to prevent some optimizations happening *)\n  external run : 'a arity0 -> 'a = \"#run\" \n  external opaque : 'a -> 'a = \"%opaque\"\n\nend    \n(**/**)\n\n\ntype + 'a null\n(** nullable, value of this type can be either [null] or ['a]\n    this type is the same as type [t] in {!Null}\n*)\n\ntype + 'a undefined\n(** value of this type can be either [undefined] or ['a]\n    this type is the same as type [t] in {!Undefined}  *)\n\ntype + 'a nullable\n(** value of this type can be [undefined], [null] or ['a]\n    this type is the same as type [t] n {!Null_undefined} *)\n\ntype + 'a null_undefined = 'a nullable\n\nexternal toOption : 'a nullable  -> 'a option = \"#nullable_to_opt\"\nexternal undefinedToOption : 'a undefined -> 'a option = \"#undefined_to_opt\"\nexternal nullToOption : 'a null -> 'a option = \"#null_to_opt\"\n\nexternal isNullable : 'a nullable -> bool = \"#is_nullable\"\n\n(** The same as {!test} except that it is more permissive on the types of input *)\nexternal testAny : 'a -> bool = \"#is_nullable\"\n\n\ntype (+'a, +'e) promise\n(** The promise type, defined here for interoperation across packages\n    @deprecated please use {!Js.Promise}\n*)\n\nexternal null : 'a null = \"#null\"\n(** The same as [empty] in {!Js.Null} will be compiled as [null]*)\n\nexternal undefined : 'a undefined = \"#undefined\"\n(** The same as  [empty] {!Js.Undefined} will be compiled as [undefined]*)\n\n\n\nexternal typeof : 'a -> string = \"#typeof\"\n(** [typeof x] will be compiled as [typeof x] in JS\n    Please consider functions in {!Types} for a type safe way of reflection\n*)\n\nexternal log : 'a -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\n(** A convenience function to log everything *)\n\nexternal log2 : 'a -> 'b -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\nexternal log3 : 'a -> 'b -> 'c -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\nexternal log4 : 'a -> 'b -> 'c -> 'd -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\n\nexternal logMany : 'a array -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"] [@@bs.splice]\n(** A convenience function to log more than 4 arguments *)\n\nexternal eqNull : 'a -> 'a null -> bool = \"%bs_equal_null\"\nexternal eqUndefined : 'a -> 'a undefined -> bool = \"%bs_equal_undefined\"\nexternal eqNullable : 'a -> 'a nullable -> bool = \"%bs_equal_nullable\"\n\n(** {4 operators }*)\n\nexternal unsafe_lt : 'a -> 'a -> bool = \"#unsafe_lt\"\n(** [unsafe_lt a b] will be compiled as [a < b].\n    It is marked as unsafe, since it is impossible\n    to give a proper semantics for comparision which applies to any type\n*)\n\n\nexternal unsafe_le : 'a -> 'a -> bool = \"#unsafe_le\"\n(**  [unsafe_le a b] will be compiled as [a <= b].\n     See also {!unsafe_lt}\n*)\n\n\nexternal unsafe_gt : 'a -> 'a -> bool = \"#unsafe_gt\"\n(**  [unsafe_gt a b] will be compiled as [a > b].\n     See also {!unsafe_lt}\n*)\n\nexternal unsafe_ge : 'a -> 'a -> bool = \"#unsafe_ge\"\n(**  [unsafe_ge a b] will be compiled as [a >= b].\n     See also {!unsafe_lt}\n*)\n\n\n(** {12 nested modules}*)\n\nmodule Null = Js_null\n(** Provide utilities around ['a null] *)\n\nmodule Undefined = Js_undefined\n(** Provide utilities around {!undefined} *)\n\nmodule Nullable = Js_null_undefined\n(** Provide utilities around {!null_undefined} *)\n\nmodule Null_undefined = Js_null_undefined\n(** @deprecated please use {!Js.Nullable} *)\n\nmodule Exn = Js_exn\n(** Provide utilities for dealing with Js exceptions *)\n\nmodule Array = Js_array\n(** Provide bindings to Js array*)\n\nmodule Array2 = Js_array2\n(** Provide bindings to Js array*)\n\nmodule String = Js_string\n(** Provide bindings to JS string *)\n\nmodule String2 = Js_string2\n(** Provide bindings to JS string *)\n\nmodule Re = Js_re\n(** Provide bindings to Js regex expression *)\n\nmodule Promise = Js_promise\n(** Provide bindings to JS promise *)\n\nmodule Date = Js_date\n(** Provide bindings for JS Date *)\n\nmodule Dict = Js_dict\n(** Provide utilities for JS dictionary object *)\n\nmodule Global = Js_global\n(** Provide bindings to JS global functions in global namespace*)\n\nmodule Json = Js_json\n(** Provide utilities for json *)\n\nmodule Math = Js_math\n(** Provide bindings for JS [Math] object *)\n\nmodule Obj  = Js_obj\n(** Provide utilities for {!Js.t} *)\n\nmodule Typed_array = Js_typed_array\n(** Provide bindings for JS typed array *)\n\nmodule TypedArray2 = Js_typed_array2\n(** Provide bindings for JS typed array *)\n\nmodule Types = Js_types\n(** Provide utilities for manipulating JS types  *)\n\nmodule Float = Js_float\n(** Provide utilities for JS float *)\n\nmodule Int = Js_int\n(** Provide utilities for int *)\n\nmodule Option = Js_option\n(** Provide utilities for option *)\n\nmodule Result = Js_result\n(** Define the interface for result *)\n\nmodule List = Js_list\n(** Provide utilities for list *)\n\nmodule Vector = Js_vector\n\nmodule Console = Js_console\n"}}}
bs-platform could not be found
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "bs-platform could not be found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/jasoons/Documents/code/monorepo/scripts/node_modules/rescript/lib/ocaml/js.ml"}}}
bs-platform could not be found
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/jasoons/Documents/code/monorepo/scripts/node_modules/rescript/lib/ocaml/js.ml","languageId":"ocaml","version":1,"text":"(* Copyright (C) 2015-2016 Bloomberg Finance L.P.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * In addition to the permissions granted to you by the LGPL, you may combine\n * or link a \"work that uses the Library\" with a publicly distributed version\n * of this file to produce a combined library or application, then distribute\n * that combined work under the terms of your choosing, with no requirement\n * to comply with the obligations normally placed on you by section 4 of the\n * LGPL version 3 (or the corresponding section of a later version of the LGPL\n * should you choose to use a later version).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. *)\n\n[@@@bs.config {flags = [|\"-unboxed-types\";\"-w\" ;\"-49\"|]}]\n(* DESIGN:\n   - It does not have any code, all its code will be inlined so that\n       there will never be\n   {[ require('js')]}\n   - Its interface should be minimal\n*)\n\n(** This library provides bindings and necessary support for JS FFI.\n    It contains all bindings into [Js] namespace.\n\n    @example {[\n      [| 1;2;3;4|]\n      |. Js.Array2.map (fun x -> x + 1 )\n      |. Js.Array2.reduce (+) 0\n      |. Js.log\n    ]}\n*)\n\n(**/**)\n(** Types for JS objects *)\ntype 'a t = 'a\n[@@ocaml.deprecated \"Js.t is not needed any more, you can remove it\"]\n(**/**)\n\n(* internal types for FFI, these types are not used by normal users \n    Absent cmi file when looking up module alias.\n*)\nmodule Fn = struct\n  type 'a arity0 = {\n    i0 : unit -> 'a [@internal]  \n  }\n  type 'a arity1 = {\n    i1 : 'a [@internal]\n  }\n  type 'a arity2 = {\n    i2 : 'a [@internal]\n  }\n  type 'a arity3 = {\n    i3 : 'a [@internal]\n  }\n  type 'a arity4 = {\n    i4 : 'a [@internal]\n  }\n  type 'a arity5 = {\n    i5 : 'a [@internal]\n  }\n  type 'a arity6 = {\n    i6 : 'a [@internal]\n  }\n  type 'a arity7 = {\n    i7 : 'a [@internal]\n  }\n  type 'a arity8 = {\n    i8 : 'a [@internal]\n  }\n  type 'a arity9 = {\n    i9 : 'a [@internal]\n  }\n  type 'a arity10 = {\n    i10 : 'a [@internal]\n  }\n  type 'a arity11 = {\n    i11 : 'a [@internal]\n  }\n  type 'a arity12 = {\n    i12 : 'a [@internal]\n  }\n  type 'a arity13 = {\n    i13 : 'a [@internal]\n  }\n  type 'a arity14 = {\n    i14 : 'a [@internal]\n  }\n  type 'a arity15 = {\n    i15 : 'a [@internal]\n  }\n  type 'a arity16 = {\n    i16 : 'a [@internal]\n  }\n  type 'a arity17 = {\n    i17 : 'a [@internal]\n  }\n  type 'a arity18 = {\n    i18 : 'a [@internal]\n  }\n  type 'a arity19 = {\n    i19 : 'a [@internal]\n  }\n  type 'a arity20 = {\n    i20 : 'a [@internal]\n  }\n  type 'a arity21 = {\n    i21 : 'a [@internal]\n  }\n  type 'a arity22 = {\n    i22 : 'a [@internal]\n  }\nend\n\n(**/**)\nmodule MapperRt = Js_mapperRt\nmodule Internal = struct \n  open Fn    \n  external opaqueFullApply : 'a -> 'a = \"#full_apply\"\n\n  (* Use opaque instead of [._n] to prevent some optimizations happening *)\n  external run : 'a arity0 -> 'a = \"#run\" \n  external opaque : 'a -> 'a = \"%opaque\"\n\nend    \n(**/**)\n\n\ntype + 'a null\n(** nullable, value of this type can be either [null] or ['a]\n    this type is the same as type [t] in {!Null}\n*)\n\ntype + 'a undefined\n(** value of this type can be either [undefined] or ['a]\n    this type is the same as type [t] in {!Undefined}  *)\n\ntype + 'a nullable\n(** value of this type can be [undefined], [null] or ['a]\n    this type is the same as type [t] n {!Null_undefined} *)\n\ntype + 'a null_undefined = 'a nullable\n\nexternal toOption : 'a nullable  -> 'a option = \"#nullable_to_opt\"\nexternal undefinedToOption : 'a undefined -> 'a option = \"#undefined_to_opt\"\nexternal nullToOption : 'a null -> 'a option = \"#null_to_opt\"\n\nexternal isNullable : 'a nullable -> bool = \"#is_nullable\"\n\n(** The same as {!test} except that it is more permissive on the types of input *)\nexternal testAny : 'a -> bool = \"#is_nullable\"\n\n\ntype (+'a, +'e) promise\n(** The promise type, defined here for interoperation across packages\n    @deprecated please use {!Js.Promise}\n*)\n\nexternal null : 'a null = \"#null\"\n(** The same as [empty] in {!Js.Null} will be compiled as [null]*)\n\nexternal undefined : 'a undefined = \"#undefined\"\n(** The same as  [empty] {!Js.Undefined} will be compiled as [undefined]*)\n\n\n\nexternal typeof : 'a -> string = \"#typeof\"\n(** [typeof x] will be compiled as [typeof x] in JS\n    Please consider functions in {!Types} for a type safe way of reflection\n*)\n\nexternal log : 'a -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\n(** A convenience function to log everything *)\n\nexternal log2 : 'a -> 'b -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\nexternal log3 : 'a -> 'b -> 'c -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\nexternal log4 : 'a -> 'b -> 'c -> 'd -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"]\n\nexternal logMany : 'a array -> unit = \"log\"\n[@@bs.val] [@@bs.scope \"console\"] [@@bs.splice]\n(** A convenience function to log more than 4 arguments *)\n\nexternal eqNull : 'a -> 'a null -> bool = \"%bs_equal_null\"\nexternal eqUndefined : 'a -> 'a undefined -> bool = \"%bs_equal_undefined\"\nexternal eqNullable : 'a -> 'a nullable -> bool = \"%bs_equal_nullable\"\n\n(** {4 operators }*)\n\nexternal unsafe_lt : 'a -> 'a -> bool = \"#unsafe_lt\"\n(** [unsafe_lt a b] will be compiled as [a < b].\n    It is marked as unsafe, since it is impossible\n    to give a proper semantics for comparision which applies to any type\n*)\n\n\nexternal unsafe_le : 'a -> 'a -> bool = \"#unsafe_le\"\n(**  [unsafe_le a b] will be compiled as [a <= b].\n     See also {!unsafe_lt}\n*)\n\n\nexternal unsafe_gt : 'a -> 'a -> bool = \"#unsafe_gt\"\n(**  [unsafe_gt a b] will be compiled as [a > b].\n     See also {!unsafe_lt}\n*)\n\nexternal unsafe_ge : 'a -> 'a -> bool = \"#unsafe_ge\"\n(**  [unsafe_ge a b] will be compiled as [a >= b].\n     See also {!unsafe_lt}\n*)\n\n\n(** {12 nested modules}*)\n\nmodule Null = Js_null\n(** Provide utilities around ['a null] *)\n\nmodule Undefined = Js_undefined\n(** Provide utilities around {!undefined} *)\n\nmodule Nullable = Js_null_undefined\n(** Provide utilities around {!null_undefined} *)\n\nmodule Null_undefined = Js_null_undefined\n(** @deprecated please use {!Js.Nullable} *)\n\nmodule Exn = Js_exn\n(** Provide utilities for dealing with Js exceptions *)\n\nmodule Array = Js_array\n(** Provide bindings to Js array*)\n\nmodule Array2 = Js_array2\n(** Provide bindings to Js array*)\n\nmodule String = Js_string\n(** Provide bindings to JS string *)\n\nmodule String2 = Js_string2\n(** Provide bindings to JS string *)\n\nmodule Re = Js_re\n(** Provide bindings to Js regex expression *)\n\nmodule Promise = Js_promise\n(** Provide bindings to JS promise *)\n\nmodule Date = Js_date\n(** Provide bindings for JS Date *)\n\nmodule Dict = Js_dict\n(** Provide utilities for JS dictionary object *)\n\nmodule Global = Js_global\n(** Provide bindings to JS global functions in global namespace*)\n\nmodule Json = Js_json\n(** Provide utilities for json *)\n\nmodule Math = Js_math\n(** Provide bindings for JS [Math] object *)\n\nmodule Obj  = Js_obj\n(** Provide utilities for {!Js.t} *)\n\nmodule Typed_array = Js_typed_array\n(** Provide bindings for JS typed array *)\n\nmodule TypedArray2 = Js_typed_array2\n(** Provide bindings for JS typed array *)\n\nmodule Types = Js_types\n(** Provide utilities for manipulating JS types  *)\n\nmodule Float = Js_float\n(** Provide utilities for JS float *)\n\nmodule Int = Js_int\n(** Provide utilities for int *)\n\nmodule Option = Js_option\n(** Provide utilities for option *)\n\nmodule Result = Js_result\n(** Define the interface for result *)\n\nmodule List = Js_list\n(** Provide utilities for list *)\n\nmodule Vector = Js_vector\n\nmodule Console = Js_console\n"}}}
bs-platform could not be found
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "bs-platform could not be found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/jasoons/Documents/code/monorepo/scripts/node_modules/rescript/lib/ocaml/js.ml"}}}
bs-platform could not be found
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":false}}}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeWatchedFiles","params":{"changes":[{"uri":"file:///home/jasoons/Documents/code/monorepo/scripts/.merlin","type":2}]}}
Got a watched file change
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeWatchedFiles","params":{"changes":[{"uri":"file:///home/jasoons/Documents/code/monorepo/scripts/.merlin","type":2}]}}
Got a watched file change
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":false}}}}
Read message 
{"jsonrpc":"2.0","method":"$/setTraceNotification","params":{"value":"off"}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":false}}}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"shutdown","params":null}
Sending response {"id": 1, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"exit","params":null}
Got exit! Terminating loop
Finished
